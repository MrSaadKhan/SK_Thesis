Processing for input directory: /home/iotresearch/saad/FastTextExp/thesis_b/preprocessed_data/ungrouped
Creating embeddings at vector size: 128
['nature_remo.json', 'xiaomi_mijia_led.json', 'irobot_roomba.json', 'planex_smacam_pantilt.json', 'jvc_kenwood_hdtv_ip_camera.json', 'qrio_hub.json', 'au_network_camera.json', 'planex_smacam_outdoor.json', 'candy_house_sesami_wi-fi_access_point.json', 'line_clova_wave.json']
Model and tokenizer loaded successfully.
Number of seen embeddings created: 226
Number of unseen embeddings created: 96
Number of seen embeddings created: 3258
Number of unseen embeddings created: 1395
Number of seen embeddings created: 3435
Number of unseen embeddings created: 1471
Number of seen embeddings created: 17785
Number of unseen embeddings created: 7622
Number of seen embeddings created: 8492
Number of unseen embeddings created: 3639
Number of seen embeddings created: 21065
Number of unseen embeddings created: 9027
Number of seen embeddings created: 31881
Number of unseen embeddings created: 13662
Number of seen embeddings created: 23076
Number of unseen embeddings created: 9889
Number of seen embeddings created: 96047
Number of unseen embeddings created: 41163
Number of seen embeddings created: 80227
Number of unseen embeddings created: 34382
Filename: /home/iotresearch/saad/FastTextExp/thesis_b/main_create_all_embeddings.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
     9   1444.3 MiB   1444.3 MiB           1   @profile
    10                                         def main(device_low, device_high, save_dir, data_path, group_option, word_embedding_option, window_size, slide_length, vector_size = 768):
    11                                             # Directory path to read files from
    12   1444.3 MiB      0.0 MiB           1       file_path = r'/home/iotresearch/saad/data/KDDI-IoT-2019/ipfix'
    13                                         
    14   1444.3 MiB      0.0 MiB           1       if not os.path.exists(file_path):
    15                                                 file_path = r'C:\Users\Saad Khan\OneDrive - UNSW\University\5th Yr\T1\Thesis A\Data'
    16                                         
    17                                             # List of files to exclude
    18   1444.3 MiB      0.0 MiB           1       exclusion_list = ['sony_network_camera.json', 'mouse_computer_room_hub.json', 'planex_camera_one_shot!.json']
    19                                         
    20                                             # Get a list of all devices in the directory
    21   1444.3 MiB      0.0 MiB           1       all_devices = os.listdir(file_path)
    22                                             # Filter out devices that are in the exclusion list
    23   1444.3 MiB      0.0 MiB          28       filtered_devices = [device for device in all_devices if device not in exclusion_list]
    24                                             # Sort devices by file size
    25   1444.3 MiB      0.0 MiB          45       devices_sorted = sorted(filtered_devices, key=lambda device: os.path.getsize(os.path.join(file_path, device)))
    26                                             # Select the five smallest devices from the sorted list
    27   1444.3 MiB      0.0 MiB           1       device_list = devices_sorted[device_low:device_high]
    28   1444.3 MiB      0.0 MiB           1       print(device_list)
    29                                         
    30                                             # Train the FastText model and create it's embeddings
    31   1444.3 MiB      0.0 MiB           1       gc.collect()
    32   1444.3 MiB      0.0 MiB           1       start_memory = memory_usage(-1, interval=0.1, include_children=True)[0]
    33   1444.3 MiB      0.0 MiB           1       start_time = time.time()
    34                                         
    35                                             # new_dir = os.path.join(save_dir, 'FastText')
    36                                             # if not os.path.exists(new_dir):
    37                                             #     os.mkdir(new_dir)
    38                                         
    39                                             # model_filename = create_fasttext_embeddings.train_fasttext_model(file_path, device_list, new_dir, data_path, group_option, word_embedding_option, vector_size)
    40                                             # fast_text_training_time = time.time() - start_time
    41                                             # fast_text_training_mem_usage = memory_usage(-1, interval=0.1, include_children=True)[0] - start_memory
    42                                         
    43                                             # gc.collect()
    44                                             # start_memory = memory_usage(-1, interval=0.1, include_children=True)[0]
    45                                             # start_time = time.time()
    46                                         
    47                                             # seen_ft, unseen_ft = create_fasttext_embeddings.create_embeddings(model_filename, file_path, device_list, data_path, vector_size)
    48                                             # fast_text_embeddings_creation_time = time.time() - start_time
    49                                             # fast_text_embeddings_creation_mem_usage = memory_usage(-1, interval=0.1, include_children=True)[0] - start_memory
    50                                         
    51                                             # gc.collect()
    52                                             # start_memory = memory_usage(-1, interval=0.1, include_children=True)[0]
    53                                             # start_time = time.time()
    54                                         
    55                                             # Create BERT embeddings using pretrained model
    56                                             # devices_lengths = [seen, unseen]
    57   1444.3 MiB      0.0 MiB           1       seen_ft = 0
    58   1444.3 MiB      0.0 MiB           1       unseen_ft = 0
    59                                         
    60                                         
    61   1444.3 MiB      0.0 MiB           1       new_dir = os.path.join(save_dir, 'BERT')
    62   1444.3 MiB      0.0 MiB           1       if not os.path.exists(new_dir):
    63   1444.3 MiB      0.0 MiB           1           os.mkdir(new_dir)
    64                                         
    65   2340.1 MiB    895.8 MiB           1       seen, unseen, temp = create_bert_embeddings.create_embeddings(file_path, device_list, new_dir, data_path, group_option, word_embedding_option, window_size, slide_length, vector_size)
    66   2340.1 MiB      0.0 MiB           1       if temp is not None:
    67   2340.1 MiB      0.0 MiB           1           bert_embeddings_creation_time = time.time() - start_time
    68   2340.1 MiB      0.0 MiB           1           bert_embeddings_creation_mem_usage = memory_usage(-1, interval=0.1, include_children=True)[0] - start_memory
    69                                             else:
    70                                                 bert_embeddings_creation_time = 0
    71                                                 bert_embeddings_creation_mem_usage = 0
    72                                         
    73   2340.1 MiB      0.0 MiB           1       total = seen + unseen
    74   2340.1 MiB      0.0 MiB           1       if total == 0:
    75                                                 total = seen_ft + unseen_ft
    76                                                 unseen = unseen_ft
    77                                                 seen = seen_ft
    78                                         
    79                                             # Per flow!
    80   2340.1 MiB      0.0 MiB           1       if total != 0:
    81                                                 # times = (fast_text_training_time/unseen, fast_text_embeddings_creation_time/total, bert_embeddings_creation_time/total)
    82                                                 # memories = (fast_text_training_mem_usage/unseen, fast_text_embeddings_creation_mem_usage/total, bert_embeddings_creation_mem_usage/total)
    83   2340.1 MiB      0.0 MiB           1           times = (0, 0, bert_embeddings_creation_time/total)
    84   2340.1 MiB      0.0 MiB           1           memories = (0, 0, bert_embeddings_creation_mem_usage/total)
    85                                         
    86                                             else:
    87                                                 times = (0, 0, 0)
    88                                                 memories = times
    89                                         
    90   2340.1 MiB      0.0 MiB           1       return times, memories


Creating embeddings at vector size: 256
['nature_remo.json', 'xiaomi_mijia_led.json', 'irobot_roomba.json', 'planex_smacam_pantilt.json', 'jvc_kenwood_hdtv_ip_camera.json', 'qrio_hub.json', 'au_network_camera.json', 'planex_smacam_outdoor.json', 'candy_house_sesami_wi-fi_access_point.json', 'line_clova_wave.json']
Model and tokenizer loaded successfully.
Number of seen embeddings created: 226
Number of unseen embeddings created: 96
Number of seen embeddings created: 3258
Number of unseen embeddings created: 1395
Number of seen embeddings created: 3435
Number of unseen embeddings created: 1471
Number of seen embeddings created: 17785
Number of unseen embeddings created: 7622
Number of seen embeddings created: 8492
Number of unseen embeddings created: 3639
Number of seen embeddings created: 21065
Number of unseen embeddings created: 9027
Number of seen embeddings created: 31881
Number of unseen embeddings created: 13662
Number of seen embeddings created: 23076
Number of unseen embeddings created: 9889
Number of seen embeddings created: 96047
Number of unseen embeddings created: 41163
Number of seen embeddings created: 80227
Number of unseen embeddings created: 34382
Filename: /home/iotresearch/saad/FastTextExp/thesis_b/main_create_all_embeddings.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
     9   2340.1 MiB   2340.1 MiB           1   @profile
    10                                         def main(device_low, device_high, save_dir, data_path, group_option, word_embedding_option, window_size, slide_length, vector_size = 768):
    11                                             # Directory path to read files from
    12   2340.1 MiB      0.0 MiB           1       file_path = r'/home/iotresearch/saad/data/KDDI-IoT-2019/ipfix'
    13                                         
    14   2340.1 MiB      0.0 MiB           1       if not os.path.exists(file_path):
    15                                                 file_path = r'C:\Users\Saad Khan\OneDrive - UNSW\University\5th Yr\T1\Thesis A\Data'
    16                                         
    17                                             # List of files to exclude
    18   2340.1 MiB      0.0 MiB           1       exclusion_list = ['sony_network_camera.json', 'mouse_computer_room_hub.json', 'planex_camera_one_shot!.json']
    19                                         
    20                                             # Get a list of all devices in the directory
    21   2340.1 MiB      0.0 MiB           1       all_devices = os.listdir(file_path)
    22                                             # Filter out devices that are in the exclusion list
    23   2340.1 MiB      0.0 MiB          28       filtered_devices = [device for device in all_devices if device not in exclusion_list]
    24                                             # Sort devices by file size
    25   2340.1 MiB      0.0 MiB          45       devices_sorted = sorted(filtered_devices, key=lambda device: os.path.getsize(os.path.join(file_path, device)))
    26                                             # Select the five smallest devices from the sorted list
    27   2340.1 MiB      0.0 MiB           1       device_list = devices_sorted[device_low:device_high]
    28   2340.1 MiB      0.0 MiB           1       print(device_list)
    29                                         
    30                                             # Train the FastText model and create it's embeddings
    31   2339.6 MiB     -0.5 MiB           1       gc.collect()
    32   2339.6 MiB      0.0 MiB           1       start_memory = memory_usage(-1, interval=0.1, include_children=True)[0]
    33   2339.6 MiB      0.0 MiB           1       start_time = time.time()
    34                                         
    35                                             # new_dir = os.path.join(save_dir, 'FastText')
    36                                             # if not os.path.exists(new_dir):
    37                                             #     os.mkdir(new_dir)
    38                                         
    39                                             # model_filename = create_fasttext_embeddings.train_fasttext_model(file_path, device_list, new_dir, data_path, group_option, word_embedding_option, vector_size)
    40                                             # fast_text_training_time = time.time() - start_time
    41                                             # fast_text_training_mem_usage = memory_usage(-1, interval=0.1, include_children=True)[0] - start_memory
    42                                         
    43                                             # gc.collect()
    44                                             # start_memory = memory_usage(-1, interval=0.1, include_children=True)[0]
    45                                             # start_time = time.time()
    46                                         
    47                                             # seen_ft, unseen_ft = create_fasttext_embeddings.create_embeddings(model_filename, file_path, device_list, data_path, vector_size)
    48                                             # fast_text_embeddings_creation_time = time.time() - start_time
    49                                             # fast_text_embeddings_creation_mem_usage = memory_usage(-1, interval=0.1, include_children=True)[0] - start_memory
    50                                         
    51                                             # gc.collect()
    52                                             # start_memory = memory_usage(-1, interval=0.1, include_children=True)[0]
    53                                             # start_time = time.time()
    54                                         
    55                                             # Create BERT embeddings using pretrained model
    56                                             # devices_lengths = [seen, unseen]
    57   2339.6 MiB      0.0 MiB           1       seen_ft = 0
    58   2339.6 MiB      0.0 MiB           1       unseen_ft = 0
    59                                         
    60                                         
    61   2339.6 MiB      0.0 MiB           1       new_dir = os.path.join(save_dir, 'BERT')
    62   2339.6 MiB      0.0 MiB           1       if not os.path.exists(new_dir):
    63   2339.6 MiB      0.0 MiB           1           os.mkdir(new_dir)
    64                                         
    65   3400.8 MiB   1061.2 MiB           1       seen, unseen, temp = create_bert_embeddings.create_embeddings(file_path, device_list, new_dir, data_path, group_option, word_embedding_option, window_size, slide_length, vector_size)
    66   3400.8 MiB      0.0 MiB           1       if temp is not None:
    67   3400.8 MiB      0.0 MiB           1           bert_embeddings_creation_time = time.time() - start_time
    68   3400.8 MiB      0.0 MiB           1           bert_embeddings_creation_mem_usage = memory_usage(-1, interval=0.1, include_children=True)[0] - start_memory
    69                                             else:
    70                                                 bert_embeddings_creation_time = 0
    71                                                 bert_embeddings_creation_mem_usage = 0
    72                                         
    73   3400.8 MiB      0.0 MiB           1       total = seen + unseen
    74   3400.8 MiB      0.0 MiB           1       if total == 0:
    75                                                 total = seen_ft + unseen_ft
    76                                                 unseen = unseen_ft
    77                                                 seen = seen_ft
    78                                         
    79                                             # Per flow!
    80   3400.8 MiB      0.0 MiB           1       if total != 0:
    81                                                 # times = (fast_text_training_time/unseen, fast_text_embeddings_creation_time/total, bert_embeddings_creation_time/total)
    82                                                 # memories = (fast_text_training_mem_usage/unseen, fast_text_embeddings_creation_mem_usage/total, bert_embeddings_creation_mem_usage/total)
    83   3400.8 MiB      0.0 MiB           1           times = (0, 0, bert_embeddings_creation_time/total)
    84   3400.8 MiB      0.0 MiB           1           memories = (0, 0, bert_embeddings_creation_mem_usage/total)
    85                                         
    86                                             else:
    87                                                 times = (0, 0, 0)
    88                                                 memories = times
    89                                         
    90   3400.8 MiB      0.0 MiB           1       return times, memories


Creating embeddings at vector size: 512
['nature_remo.json', 'xiaomi_mijia_led.json', 'irobot_roomba.json', 'planex_smacam_pantilt.json', 'jvc_kenwood_hdtv_ip_camera.json', 'qrio_hub.json', 'au_network_camera.json', 'planex_smacam_outdoor.json', 'candy_house_sesami_wi-fi_access_point.json', 'line_clova_wave.json']
Model and tokenizer loaded successfully.
Number of seen embeddings created: 226
Number of unseen embeddings created: 96
Number of seen embeddings created: 3258
Number of unseen embeddings created: 1395
Number of seen embeddings created: 3435
Number of unseen embeddings created: 1471
Number of seen embeddings created: 17785
Number of unseen embeddings created: 7622
Number of seen embeddings created: 8492
Number of unseen embeddings created: 3639
Number of seen embeddings created: 21065
Number of unseen embeddings created: 9027
Number of seen embeddings created: 31881
Number of unseen embeddings created: 13662
Number of seen embeddings created: 23076
Number of unseen embeddings created: 9889
Number of seen embeddings created: 96047
Number of unseen embeddings created: 41163
Number of seen embeddings created: 80227
Number of unseen embeddings created: 34382
Filename: /home/iotresearch/saad/FastTextExp/thesis_b/main_create_all_embeddings.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
     9   3400.8 MiB   3400.8 MiB           1   @profile
    10                                         def main(device_low, device_high, save_dir, data_path, group_option, word_embedding_option, window_size, slide_length, vector_size = 768):
    11                                             # Directory path to read files from
    12   3400.8 MiB      0.0 MiB           1       file_path = r'/home/iotresearch/saad/data/KDDI-IoT-2019/ipfix'
    13                                         
    14   3400.8 MiB      0.0 MiB           1       if not os.path.exists(file_path):
    15                                                 file_path = r'C:\Users\Saad Khan\OneDrive - UNSW\University\5th Yr\T1\Thesis A\Data'
    16                                         
    17                                             # List of files to exclude
    18   3400.8 MiB      0.0 MiB           1       exclusion_list = ['sony_network_camera.json', 'mouse_computer_room_hub.json', 'planex_camera_one_shot!.json']
    19                                         
    20                                             # Get a list of all devices in the directory
    21   3400.8 MiB      0.0 MiB           1       all_devices = os.listdir(file_path)
    22                                             # Filter out devices that are in the exclusion list
    23   3400.8 MiB      0.0 MiB          28       filtered_devices = [device for device in all_devices if device not in exclusion_list]
    24                                             # Sort devices by file size
    25   3400.8 MiB      0.0 MiB          45       devices_sorted = sorted(filtered_devices, key=lambda device: os.path.getsize(os.path.join(file_path, device)))
    26                                             # Select the five smallest devices from the sorted list
    27   3400.8 MiB      0.0 MiB           1       device_list = devices_sorted[device_low:device_high]
    28   3400.8 MiB      0.0 MiB           1       print(device_list)
    29                                         
    30                                             # Train the FastText model and create it's embeddings
    31   3399.8 MiB     -1.0 MiB           1       gc.collect()
    32   3399.8 MiB      0.0 MiB           1       start_memory = memory_usage(-1, interval=0.1, include_children=True)[0]
    33   3399.8 MiB      0.0 MiB           1       start_time = time.time()
    34                                         
    35                                             # new_dir = os.path.join(save_dir, 'FastText')
    36                                             # if not os.path.exists(new_dir):
    37                                             #     os.mkdir(new_dir)
    38                                         
    39                                             # model_filename = create_fasttext_embeddings.train_fasttext_model(file_path, device_list, new_dir, data_path, group_option, word_embedding_option, vector_size)
    40                                             # fast_text_training_time = time.time() - start_time
    41                                             # fast_text_training_mem_usage = memory_usage(-1, interval=0.1, include_children=True)[0] - start_memory
    42                                         
    43                                             # gc.collect()
    44                                             # start_memory = memory_usage(-1, interval=0.1, include_children=True)[0]
    45                                             # start_time = time.time()
    46                                         
    47                                             # seen_ft, unseen_ft = create_fasttext_embeddings.create_embeddings(model_filename, file_path, device_list, data_path, vector_size)
    48                                             # fast_text_embeddings_creation_time = time.time() - start_time
    49                                             # fast_text_embeddings_creation_mem_usage = memory_usage(-1, interval=0.1, include_children=True)[0] - start_memory
    50                                         
    51                                             # gc.collect()
    52                                             # start_memory = memory_usage(-1, interval=0.1, include_children=True)[0]
    53                                             # start_time = time.time()
    54                                         
    55                                             # Create BERT embeddings using pretrained model
    56                                             # devices_lengths = [seen, unseen]
    57   3399.8 MiB      0.0 MiB           1       seen_ft = 0
    58   3399.8 MiB      0.0 MiB           1       unseen_ft = 0
    59                                         
    60                                         
    61   3399.8 MiB      0.0 MiB           1       new_dir = os.path.join(save_dir, 'BERT')
    62   3399.8 MiB      0.0 MiB           1       if not os.path.exists(new_dir):
    63   3399.8 MiB      0.0 MiB           1           os.mkdir(new_dir)
    64                                         
    65   3489.2 MiB     89.4 MiB           1       seen, unseen, temp = create_bert_embeddings.create_embeddings(file_path, device_list, new_dir, data_path, group_option, word_embedding_option, window_size, slide_length, vector_size)
    66   3489.2 MiB      0.0 MiB           1       if temp is not None:
    67   3489.2 MiB      0.0 MiB           1           bert_embeddings_creation_time = time.time() - start_time
    68   3489.2 MiB      0.0 MiB           1           bert_embeddings_creation_mem_usage = memory_usage(-1, interval=0.1, include_children=True)[0] - start_memory
    69                                             else:
    70                                                 bert_embeddings_creation_time = 0
    71                                                 bert_embeddings_creation_mem_usage = 0
    72                                         
    73   3489.2 MiB      0.0 MiB           1       total = seen + unseen
    74   3489.2 MiB      0.0 MiB           1       if total == 0:
    75                                                 total = seen_ft + unseen_ft
    76                                                 unseen = unseen_ft
    77                                                 seen = seen_ft
    78                                         
    79                                             # Per flow!
    80   3489.2 MiB      0.0 MiB           1       if total != 0:
    81                                                 # times = (fast_text_training_time/unseen, fast_text_embeddings_creation_time/total, bert_embeddings_creation_time/total)
    82                                                 # memories = (fast_text_training_mem_usage/unseen, fast_text_embeddings_creation_mem_usage/total, bert_embeddings_creation_mem_usage/total)
    83   3489.2 MiB      0.0 MiB           1           times = (0, 0, bert_embeddings_creation_time/total)
    84   3489.2 MiB      0.0 MiB           1           memories = (0, 0, bert_embeddings_creation_mem_usage/total)
    85                                         
    86                                             else:
    87                                                 times = (0, 0, 0)
    88                                                 memories = times
    89                                         
    90   3489.2 MiB      0.0 MiB           1       return times, memories


Creating embeddings at vector size: 768
['nature_remo.json', 'xiaomi_mijia_led.json', 'irobot_roomba.json', 'planex_smacam_pantilt.json', 'jvc_kenwood_hdtv_ip_camera.json', 'qrio_hub.json', 'au_network_camera.json', 'planex_smacam_outdoor.json', 'candy_house_sesami_wi-fi_access_point.json', 'line_clova_wave.json']
Model and tokenizer loaded successfully.
Number of seen embeddings created: 226
Number of unseen embeddings created: 96
Number of seen embeddings created: 3258
Number of unseen embeddings created: 1395
Number of seen embeddings created: 3435
Number of unseen embeddings created: 1471
